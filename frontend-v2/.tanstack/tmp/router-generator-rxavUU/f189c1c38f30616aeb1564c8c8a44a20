/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProblemsRouteImport } from './routes/Problems'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProblemsPidRouteImport } from './routes/problems.$pid'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProblemsRoute = ProblemsRouteImport.update({
  id: '/Problems',
  path: '/Problems',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProblemsPidRoute = ProblemsPidRouteImport.update({
  id: '/problems/$pid',
  path: '/problems/$pid',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Problems': typeof ProblemsRoute
  '/about': typeof AboutRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/problems/$pid': typeof ProblemsPidRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Problems': typeof ProblemsRoute
  '/about': typeof AboutRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
  '/problems/$pid': typeof ProblemsPidRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Problems': typeof ProblemsRoute
  '/about': typeof AboutRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
  '/problems/$pid': typeof ProblemsPidRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Problems'
    | '/about'
    | '/login'
    | '/signup'
    | '/problems/$pid'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/Problems' | '/about' | '/login' | '/signup' | '/problems/$pid'
  id:
    | '__root__'
    | '/'
    | '/Problems'
    | '/about'
    | '/(auth)/login'
    | '/(auth)/signup'
    | '/problems/$pid'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProblemsRoute: typeof ProblemsRoute
  AboutRoute: typeof AboutRoute
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
  ProblemsPidRoute: typeof ProblemsPidRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/Problems': {
      id: '/Problems'
      path: '/Problems'
      fullPath: '/Problems'
      preLoaderRoute: typeof ProblemsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/problems/$pid': {
      id: '/problems/$pid'
      path: '/problems/$pid'
      fullPath: '/problems/$pid'
      preLoaderRoute: typeof ProblemsPidRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProblemsRoute: ProblemsRoute,
  AboutRoute: AboutRoute,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
  ProblemsPidRoute: ProblemsPidRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
